#!/usr/bin/env python3

# Constant variables. DO NOT EDIT unless you know what you are doing
import os, sys

def main(j, plugin):
	def banner():
		j.clears()
		print()
		print('-'.center(j.tsize, '-'))
		print(j.intro1+"Amlogic unpack".center(j.tsize)+color['n'])
		print(j.intro2+'by SuperR'.center(j.tsize)+color['n'])
		print('-'.center(j.tsize, '-'))
		print()

	plugdir = j.tools+os.sep+'plugins'+os.sep+plugin
	color = j.color

	if os.name == 'nt':
		import colorama
		colorama.init()
	# END Constant variables

	# START Script here
	if j.platf == 'win':
		if not j.existf(plugdir+os.sep+'tools'+os.sep+'cygwin1.dll'):
			j.cp(j.tools+os.sep+'win_tools'+os.sep+'cygwin1.dll', plugdir+os.sep+'tools'+os.sep+'cygwin1.dll')
		aml = plugdir+os.sep+'tools'+os.sep+'aml.exe'
	else:
		aml = plugdir+os.sep+'tools'+os.sep+'aml'
		if j.osbit() == '32':
			aml = plugdir+os.sep+'tools'+os.sep+'aml_32'

		j.cmd('chmod a+x '+aml)

	with j.cd(j.rd):
		findextract = j.greps(j.fl('\.img$','boot.img|BOOT|recovery.img|RECOVERY'), j.findf('*'))
		imgfile = j.chlist(color['gb']+'Choose img to extract:'+color['n'], findextract, len(findextract), 'plug')
		
		if imgfile == 1:
			return
		elif imgfile == 3:
			sys.exit()
		
		if not imgfile:
			banner()
			j.kprint('No img file to extract', 'r')
			print()
			input('Press ENTER to exit')
			return
		
		banner()
		j.kprint('Extracting '+imgfile+' ...', 'b')
		
		j.mkdir('output')
		os.replace(imgfile, 'output'+os.sep+imgfile)
		
		with j.cd('output'):
			j.cmd(aml+' "'+imgfile+'"')
		
		os.replace('output'+os.sep+imgfile, imgfile)
		
		imglist = {}
		for i in j.partslist + ['boot', 'recovery']:
			imglist[i + '.PARTITION'] = i + '.img'

		for i in list(imglist):
			if j.existf('output/'+i):
				os.replace('output/'+i, imglist[i])

		j.delpath('output')

		if not j.existf('system.img') and not j.existf('super.img'):
			banner()
			j.kprint('Unpack failed', 'r')
			print()
			input('Press ENTER to exit')
			return
		else:
			banner()
			j.kprint('Unpack complete', 'g')
			print()
			input('Press ENTER to exit')
			return
